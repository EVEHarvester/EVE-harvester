{
  "name": "grunt-line-remover",
  "version": "0.0.2",
  "description": "Removes lines from files by using parameters you control",
  "keywords": [
    "gruntplugin"
  ],
  "homepage": "https://github.com/davidtucker/grunt-line-remover",
  "bugs": "https://github.com/davidtucker/grunt-line-remover/issues",
  "author": {
    "name": "David Tucker",
    "email": "david@davidtucker.net",
    "url": "http://www.davidtucker.net"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/davidtucker/grunt-line-remover.git"
  },
  "scripts": {
    "test": "grunt"
  },
  "devDependencies": {
    "grunt": "~0.4.1",
    "grunt-contrib-watch": "~0.3.1",
    "grunt-contrib-jshint": "~0.4.3",
    "grunt-contrib-clean": "~0.4.1",
    "grunt-contrib-nodeunit": "~0.1.2"
  },
  "peerDependencies": {
    "grunt": "~0.4.0"
  },
  "engines": {
    "node": ">=0.8.0"
  },
  "licenses": {
    "type": "MIT"
  },
  "readme": "# grunt-line-remover [![Build Status](https://travis-ci.org/davidtucker/grunt-line-remover.png)](https://travis-ci.org/davidtucker/grunt-line-remover) \n\n> Removed Lines for Files of Any Type Using Regular Expressions That You Define\n\n## Getting Started\nThis plugin requires Grunt `~0.4.0`\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-line-remover --save-dev\n```\n\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-line-remover');\n```\n\n## lineremover task\n_Run this task with the `grunt lineremover` command._\n\nRemoves lines from the files passed in using either an inclusion or exclusion regular expression pattern.\n\n### Options\n\nAll options assume that you are passing in either a RegExp instance or a string (which will be wrapped in ```new RegExp()```).  Also, note that if all lines are removed from a file, the result will not be put into the destination file (as that file would be empty).\n\n#### inclusionPattern\n\nType: `RegExp`  \nDefault: `/\\S/g`\n\nDoes not remove lines that meet the pattern that is passed in.  By default, this task uses an inclusion rule that includes non-whitespace characters.  This means, that by default the task removes all lines that contain only whitespace.\n\n#### exclusionPattern\n\nType: `Boolean`  \nDefault: `none`\n\nRemoves lines that meet the pattern that is passed in.\n\n#### Example config\n\n```javascript\ngrunt.initConfig({\n  lineremover: {\n    noOptions: {\n      files: {\n        'tmp/sampleWithoutWhitespace.html': 'test/fixtures/sampleWithWhitespace.html'\n      }\n    },\n    customExclude: {\n      files: {\n        'tmp/sampleExclusionRule.html': 'test/fixtures/sampleWithWhitespace.html'\n      },\n      options: {\n        exclusionPattern: /html/g\n      }\n    },\n  }\n});\n```",
  "readmeFilename": "README.md",
  "_id": "grunt-line-remover@0.0.2",
  "dist": {
    "shasum": "38221cc6beb8a36b8252763875dbb6348221ea2d",
    "tarball": "http://registry.npmjs.org/grunt-line-remover/-/grunt-line-remover-0.0.2.tgz"
  },
  "_npmVersion": "1.1.65",
  "_npmUser": {
    "name": "dtuckernet",
    "email": "david@davidtucker.net"
  },
  "maintainers": [
    {
      "name": "dtuckernet",
      "email": "david@davidtucker.net"
    }
  ],
  "directories": {},
  "_shasum": "38221cc6beb8a36b8252763875dbb6348221ea2d",
  "_from": "grunt-line-remover@*",
  "_resolved": "https://registry.npmjs.org/grunt-line-remover/-/grunt-line-remover-0.0.2.tgz"
}
