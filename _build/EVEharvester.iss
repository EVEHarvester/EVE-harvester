; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "EVE-harvester"
#define MyAppPublisher "IntuoSoft"
#define MyAppURL "http://www.eveharvester.com/"
#define MyAppExeName "EVEharvester.exe"
#define MyAppVersion GetFileVersion(SourcePath + "\compiled\" + MyAppExeName)

[Setup]
; NOTE: The value of AppId uniquely identifies this application.
; Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{EB268C98-8EE1-4C82-A319-ADCBA081F727}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
VersionInfoCompany={#MyAppPublisher}
VersionInfoVersion={#MyAppVersion}
DefaultDirName={pf}\{#MyAppName}
DefaultGroupName={#MyAppName}
AllowNoIcons=yes
OutputDir=compiled
OutputBaseFilename=EVEharvester_setup_v{#MyAppVersion}
SetupIconFile=..\img\icon_install.ico
Compression=lzma
SolidCompression=yes
LicenseFile=compiled\EULA.txt

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"
Name: "russian"; MessagesFile: "compiler:Languages\Russian.isl"

[Tasks]
Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked
Name: "quicklaunchicon"; Description: "{cm:CreateQuickLaunchIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked; OnlyBelowVersion: 0,6.1

[Files]
Source: "compiled\EVEharvester.exe"; DestDir: "{app}"; DestName:"{code:GetUserSpecifiedFileName}.exe"; Flags: ignoreversion
Source: "compiled\EXAMPLE-config-*.ini"; DestDir: "{app}\conf"; Flags: ignoreversion
Source: "compiled\EULA.txt"; DestDir: "{app}"; Flags: ignoreversion
Source: "compiled\utils\*.*"; DestDir: "{app}\utils"; Flags: ignoreversion recursesubdirs 
; NOTE: Don't use "Flags: ignoreversion" on any shared system files           

[Icons]
Name: "{group}\{#MyAppName}"; Filename: "{app}\{code:GetUserSpecifiedFileName}"
Name: "{group}\{cm:UninstallProgram,{#MyAppName}}"; Filename: "{uninstallexe}"
Name: "{commondesktop}\{#MyAppName}"; Filename: "{app}\{code:GetUserSpecifiedFileName}"; Tasks: desktopicon
Name: "{userappdata}\Microsoft\Internet Explorer\Quick Launch\{#MyAppName}"; Filename: "{app}\{code:GetUserSpecifiedFileName}"; Tasks: quicklaunchicon

[Code]
var
  Page: TInputQueryWizardPage;
  UserName: String;

function GetUserSpecifiedFileName(Param: String): String;
begin
  Result := Trim(UserName);
end;

procedure InitializeWizard();
begin
  Page := CreateInputQueryPage(wpWelcome,
  'Input main executable file name', 'Use letters and digits',
  'Please specify preferred executable file name, then click Next.');

  // Add items (False means it's not a password edit)
  Page.Add('Name:', False);

  // Set initial values (optional)
  Page.Values[0] := ExpandConstant('{sysuserinfoname}');
end;

function NextButtonClick(CurPageID: Integer): Boolean;
begin
  UserName := Page.Values[0];
  Result := True;
end;

[Run]
Filename: "{app}\{code:GetUserSpecifiedFileName}"; Description: "{cm:LaunchProgram,{#StringChange(MyAppName, '&', '&&')}}"; Flags: nowait postinstall skipifsilent

